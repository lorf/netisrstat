This example shows some busy router with multiple em(4) interfaces and
net.isr.dispatch=deferred, exhibiting lack of balancing over multiple netisr's.
Each interface turns out to be bound to a particular netisr thread
corresponding to interface number.

[test@test13 ~/netisrstat]$ ./netisrstat.pl -p -f ip,ether 1 1

Proto     ID   %CPU  QLen  WMark  Handled   Disp'd  HDisp'd   Queued QDrops

ether      0   30.5     0      0      932      932        0        0     0
ether      1    8.5     0      0     9473     9473        0        0     0
ether      2    2.0     0      0     2733     2733        0        0     0
ether      3   20.8     0      0      338      338        0        0     0
ether      4    0.0     0      0      250      250        0        0     0
ether      5    3.3     0      0      147      147        0        0     0
ether      6    0.0     0      0     3738     3738        0        0     0
ether      7   27.4     0      0      134      134        0        0     0
ether  total   92.5     0      0    17745    17745        0        0     0

ip         0   30.5     0   4968     3692        0        0     3692     0
ip         1    8.5     0  10240     1074        0        0     1074     0
ip         2    2.0     0   2184      955        0        0      955     0
ip         3   20.8     0   3009     3093        0        0     3093     0
ip         4    0.0     0    985        1        0        0        1     0
ip         5    3.3     0   4252      811        0        0      811     0
ip         6    0.0     0   3504       27        0        0       27     0
ip         7   27.4     0   7916     4261        0        0     4261     0
ip     total   92.5     0  37058    13914        0        0    13914     0

Total          92.5     0  37058    31659    17745        0    13914     0


This test shows a virtual machine exhibiting the same behaviour. Test traffic
is generated over one of the network interfaces. Netisr 1 shows some CPU usage
while other threads are idle.

[test@test14 ~/netisrstat]$ ./netisrstat.pl -p -f ip,ether 1 1

Proto     ID   %CPU  QLen  WMark  Handled   Disp'd  HDisp'd   Queued QDrops

ether      0    0.0     0      0      113      113        0        0     0
ether      1   31.4     0      0      123      123        0        0     0
ether      2    0.0     0      0       83       83        0        0     0
ether  total   31.4     0      0      319      319        0        0     0

ip         0    0.0     0    127        0        0        0        0     0
ip         1   31.4     0    218    33694        0        0    33694     0
ip         2    0.0     0    179       10        0        0       10     0
ip     total   31.4     0    524    33704        0        0    33704     0

Total          31.4     0    524    34023      319        0    33704     0


In this test a patch (http://static.ipfw.ru/patches/netisr_ip_flowid.diff) is
applied to the same virtual machine to balance ip traffic from one interface
over multiple netisr threads. Network load, generated over one interface,
spreads over multiple netisrs. However note the higher (about 35%) total CPU
usage of the netisr threads.

[test@test14 ~/netisrstat]$ ./netisrstat.pl -p -f ip,ether 1 1

Proto     ID   %CPU  QLen  WMark  Handled   Disp'd  HDisp'd   Queued QDrops

ether      0   14.1     0      0     1447     1447        0        0     0
ether      1   14.4     0      0     1494     1494        0        0     0
ether      2   14.6     0      0     1662     1662        0        0     0
ether  total   43.1     0      0     4603     4603        0        0     0

ip         0   14.1     0     89    12217        0        0    12217     0
ip         1   14.4     0    218    12184        0        0    12184     0
ip         2   14.6     0    179    12242        0        0    12242     0
ip     total   43.1     0    486    36643        0        0    36643     0

Total          43.1     0    486    41246     4603        0    36643     0
