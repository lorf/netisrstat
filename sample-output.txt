1. This example shows some busy router with multiple em(4) interfaces and
net.isr.dispatch=deferred, exhibiting lack of balancing over multiple netisr's.
Each interface turns out to be bound to a particular netisr thread
corresponding to interface number.

[test@test13 ~/netisrstat]$ ./netisrstat.pl -p -f ip,ether 1 1

Proto     ID   %CPU  QLen  WMark  Handled   Disp'd  HDisp'd   Queued QDrops

ether      0   94.7     0      0     1669     1669        0        0     0
ether      1   16.0     0      0    17236    17236        0        0     0
ether      2    9.7     0      0     4815     4815        0        0     0
ether      3   54.5     0      0     1038     1038        0        0     0
ether      4    0.0     0      0      277      277        0        0     0
ether      5    3.8     0      0       12       12        0        0     0
ether      6    2.9     0      0     3876     3876        0        0     0
ether      7   41.7     0      0      266      266        0        0     0
ether  total  223.3     0      0    29189    29189        0        0     0

ip         0   94.7    37  10240     8089        0        0     7901     0
ip         1   16.0     0  10240     1053        0        0     1053     0
ip         2    9.7     0   6739      619        0        0      619     0
ip         3   54.5     0   3009     5910        0        0     5916     0
ip         4    0.0     0   1244        2        0        0        2     0
ip         5    3.8     0   4781     1072        0        0     1072     0
ip         6    2.9     0   6462      474        0        0      474     0
ip         7   41.7     1  10240     4908        0        0     4902     0
ip     total  223.3    38  52955    22127        0        0    21939     0

Total         223.3    38  52955    51316    29189        0    21939     0


2. This test shows a virtual machine exhibiting the same behaviour. Test
traffic is generated over one of the network interfaces. Netisr 1 shows some
CPU usage while other threads are idle.

[test@test14 ~/netisrstat]$ ./netisrstat.pl -p -f ip,ether 1 1

Proto     ID   %CPU  QLen  WMark  Handled   Disp'd  HDisp'd   Queued QDrops

ether      0    0.0     0      0      113      113        0        0     0
ether      1   31.4     0      0      123      123        0        0     0
ether      2    0.0     0      0       83       83        0        0     0
ether  total   31.4     0      0      319      319        0        0     0

ip         0    0.0     0    127        0        0        0        0     0
ip         1   31.4     0    218    33694        0        0    33694     0
ip         2    0.0     0    179       10        0        0       10     0
ip     total   31.4     0    524    33704        0        0    33704     0

Total          31.4     0    524    34023      319        0    33704     0


3. In this test a patch (http://static.ipfw.ru/patches/netisr_ip_flowid.diff)
is applied to the same virtual machine to balance ip traffic from one interface
over multiple netisr threads. Network load, generated over one interface,
spreads over multiple netisrs. However note the higher (about 35%) total CPU
usage of the netisr threads.

[test@test14 ~/netisrstat]$ ./netisrstat.pl -p -f ip,ether 1 1

Proto     ID   %CPU  QLen  WMark  Handled   Disp'd  HDisp'd   Queued QDrops

ether      0   14.1     0      0     1447     1447        0        0     0
ether      1   14.4     0      0     1494     1494        0        0     0
ether      2   14.6     0      0     1662     1662        0        0     0
ether  total   43.1     0      0     4603     4603        0        0     0

ip         0   14.1     0     89    12217        0        0    12217     0
ip         1   14.4     0    218    12184        0        0    12184     0
ip         2   14.6     0    179    12242        0        0    12242     0
ip     total   43.1     0    486    36643        0        0    36643     0

Total          43.1     0    486    41246     4603        0    36643     0
